@model PatientModel
@*Generated from Custom Template.*@
@*Model namespace using directive should be added to _ViewImports.cshtml.*@

@* @{
    ViewData["Title"] = "Details";
}

<h1>@ViewData["Title"]</h1> *@

<div>
    <a class="btn btn-info">Patient Details</a>
    <hr />
    <dl class="row">
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.Surname)
        </dt>
        <dd class="col-10">
            @Html.DisplayFor(model => model.Surname)
        </dd>
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.GenderDisplay)
        </dt>
        <dd class="col-10">
            @Html.DisplayFor(model => model.GenderDisplay)
        </dd>
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </dt>
        <dd class="col-10">
            @Html.DisplayFor(model => model.DateOfBirth)
        </dd>
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.CityDisplay)
        </dt>
        <dd class="col-10">
            @Html.DisplayFor(model => model.CityDisplay)
        </dd>
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.Complaint)
        </dt>
        <dd class="col-10">
            @Html.DisplayFor(model => model.Complaint)
        </dd>
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.IsIssurance)
        </dt>
        <dd class="col-10">
            @Html.DisplayFor(model => model.IsIssurance)
        </dd>        
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.Doctors)
        </dt>
        <dd class="col-10">
            @for (var i = 0; i < Model.Doctors.Count; i++)
            {
                <text>@(i + 1)- @Model.Doctors[i].NameSurname</text>
                <br />
            }
        </dd>
        <dt class="col-2">
            @Html.DisplayNameFor(model => model.ImgSrcDisplay)
        </dt>
        <dd class="col-2">
            @if (Model.ImgSrcDisplay is not null)
            {
                <img src="@Model.ImgSrcDisplay" class="img-thumbnail" onclick="showImage('@Model.ImgSrcDisplay')" />
            }
            else
            {
                <i class="far fa-image" title="No Report"></i>
            }
        </dd>

        <div id="imageModal" class="modal">
            <span style="float:left; left:500px; top:20px;position:relative;" class="close" onclick="closeModal()"><h4>&#10006;</h4></span>
            <img class="modal-content" id="modalImage">
        </div>
    </dl>
</div>
<div>
    <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>&nbsp;|&nbsp;
    <a class="btn btn-outline-primary" asp-action="Index">Back to Patient List</a>
</div>

@section Scripts {

    <script>
        function showImage(src) {
            var modal = document.getElementById("imageModal");
            var modalImg = document.getElementById("modalImage");

            modal.style.display = "block";
            modalImg.src = src;

            modalImg.style.width = (modalImg.width - 900) + "px";
            modalImg.style.height = (modalImg.height - 900) + "px";
            modalImg.style.left = "500px";
            modalImg.style.top = "50px";
        }

        function closeModal() {
            var modal = document.getElementById("imageModal");
            modal.style.display = "none";
        }
    </script>
}

